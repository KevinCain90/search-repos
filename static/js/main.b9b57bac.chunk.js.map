{"version":3,"sources":["Components/SearchForm.js","Components/Repo.js","Components/NoReposExist.js","Components/RepoList.js","App.js","index.js"],"names":["SearchForm","state","searchText","onSearchChange","e","_this","setState","target","value","handleSubmit","preventDefault","props","onSearch","query","currentTarget","reset","_this2","this","react_default","a","createElement","className","onSubmit","htmlFor","type","onChange","name","ref","input","placeholder","Component","Repo","href","url","rel","description","issueCount","forksCount","watchersCount","NoReposExist","RepoList","repos","results","data","length","map","repo","Components_Repo","html_url","open_issues_count","forks_count","key","id","watchers_count","Components_NoReposExist","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","performSearch","arguments","undefined","axios","get","concat","then","response","items","loading","catch","error","console","log","SearchForm_SearchForm","Components_RepoList","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.b9b57bac.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class SearchForm extends Component {\r\n\r\n  state = {\r\n    searchText: ''\r\n  }\r\n\r\n  onSearchChange = e => {\r\n    this.setState({ searchText: e.target.value });\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSearch(this.query.value);\r\n    e.currentTarget.reset();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"search-form\" onSubmit={this.handleSubmit} >\r\n        <label className=\"is-hidden\" htmlFor=\"search\">Search</label>\r\n        <input type=\"search\"\r\n               onChange={this.onSearchChange}\r\n               name=\"search\"\r\n               ref={(input) => this.query = input}\r\n               placeholder=\"Search...\" />\r\n\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nconst Repo = props => (\r\n  <p>\r\n    <a href={props.url} target=\"_BLANK\" rel=\"noopener noreferrer\">{props.name}</a>\r\n    <span><b>Description:</b> {props.description}</span> <br></br>\r\n    <span><b>Open Issues:</b>  {props.issueCount}</span><br></br>\r\n    <span><b>Forks:</b> {props.forksCount}</span><br></br>\r\n    <span><b>Watchers:</b> {props.watchersCount}</span>\r\n  </p>\r\n);\r\n\r\nexport default Repo;","import React from 'react';\r\n\r\nconst NoReposExist = props => (\r\n  <li className='no-repos-exist'>\r\n    <h3>No Repos match your search... Please try again.</h3>\r\n  </li>\r\n);\r\n\r\nexport default NoReposExist;","import React from 'react';\r\nimport Repo from './Repo';\r\nimport NoReposExist from './NoReposExist';\r\n\r\nconst RepoList = props => {\r\n\r\n  const results = props.data;\r\n  let repos;\r\n  if (results.length) {\r\n    repos = results.map(repo => <Repo name={repo.name} url={repo.html_url} description={repo.description} issueCount={repo.open_issues_count} forksCount={repo.forks_count} key={repo.id} watchersCount={repo.watchers_count}/>);\r\n  } else {\r\n    repos = <NoReposExist />\r\n  }\r\n\r\n  return(\r\n    <ul className=\"repo-list\">\r\n      {repos}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default RepoList;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport SearchForm from './Components/SearchForm';\nimport RepoList from './Components/RepoList';\n\nexport default class App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      repos: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    this.performSearch();\n  }\n\n  performSearch = (query = 'web') => {\n    axios.get(`https://api.github.com/search/repositories?q=${query}`)\n      .then(response => {\n        this.setState({\n          query: query,\n          repos: response.data.items,\n          loading: false\n        });\n      })\n      .catch(error => {\n        console.log('Error fetching and parsing data', error);\n      });\n  }\n\n  render() {\n    console.log(this.state.repos);\n    return (\n      <div>\n        <div className=\"main-header\">\n          <div className=\"inner\">\n            <h1 className=\"main-title\">RepoSearch</h1>\n            <SearchForm onSearch={this.performSearch} />\n          </div>\n        </div>\n        <div className=\"main-content\">\n          {\n            (this.state.loading)\n              ? <p>Loading...</p>\n              : <div><h2>{this.state.query}</h2><RepoList data={this.state.repos} /></div>\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}